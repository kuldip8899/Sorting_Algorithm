# -*- coding: utf-8 -*-
"""mergesort.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1dngQnGgtaL1YuD2kNjfM21GM0EHVFPRT
"""

import time
import pandas as pd

def Sort_merge(myList):
    if len(myList) > 1:
        mid = len(myList) // 2
        left = myList[:mid]
        right = myList[mid:]

        # Recursive call on each half
        Sort_merge(left)
        Sort_merge(right)

        # Two iterators for traversing the two halves
        i = 0
        j = 0
        
        # Iterator for the main list
        k = 0
        
        while i < len(left) and j < len(right):
            if left[i] <= right[j]:
              # The value from the left half has been used
              myList[k] = left[i]
              # Move the iterator forward
              i += 1
            else:
                myList[k] = right[j]
                j += 1
            # Move to the next slot
            k += 1

        # For all the remaining values
        while i < len(left):
            myList[k] = left[i]
            i += 1
            k += 1

        while j < len(right):
            myList[k]=right[j]
            j += 1
            k += 1

# Reading the contents into an array
file20 = pd.read_csv('arr20.txt')
file100 = pd.read_csv('arr100.txt')
file1000 = pd.read_csv('arr1000.txt')
file4000 = pd.read_csv('arr4000.txt')

Array20 = [i[0] for i in file20.values.tolist()]
Array100 = [i[0] for i in file100.values.tolist()]
Array1000 = [i[0] for i in file1000.values.tolist()]
Array4000 = [i[0] for i in file4000.values.tolist()]

print("-----------------------------------Merge sort----------------------------------------")
print("Unsorted Array of Random 20 numbers: ", Array20)

begin = time.process_time()             # Starting the stopwatch
Sort_merge(Array20)    # Passing the Array20 into insertion sort algorithm
end = time.process_time()               # Ending the stopwatch
print('\nDuration for merge sorting array of 20 numbers : {}'.format(end - begin))
print('Sorted 20 Numbers: \t', Array20)

begin = time.process_time()
Sort_merge(Array100)  # Passing the Array100 into merge sort algorithm
end = time.process_time()
print('\nDuration for merge sorting array of 100 numbers : {}'.format(end - begin))
print('Sorted 100 Numbers: \t', Array100)

begin = time.process_time()
Sort_merge(Array1000)    # Passing the Array1000 into merge sort algorithm
end = time.process_time()
print('\nDuration for merge sorting array of 1000 numbers : {}'.format(end - begin))
print('Sorted 1000 Numbers: \t', Array1000)

begin = time.process_time()
Sort_merge(Array4000)     # Passing the Array4000 into merge sort algorithm
end = time.process_time()
print('\nDuration for merge sorting array of 4000 numbers : {}'.format(end - begin))
print('Sorted 4000 Numbers: \t', Array4000)